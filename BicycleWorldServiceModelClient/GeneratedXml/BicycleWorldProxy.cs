//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BicycleWorldServiceModelClient.BicycleWorldService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldEntityModel")]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ColorField;
        
        private bool IsActiveField;
        
        private decimal ListPriceField;
        
        private System.DateTime ModifiedDateField;
        
        private string NameField;
        
        private BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory ProductCategoryField;
        
        private System.Nullable<int> ProductCategoryIDField;
        
        private string ProductDescriptionField;
        
        private int ProductIDField;
        
        private string ProductNumberField;
        
        private int QuantityField;
        
        private System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrderItem> SalesOrderItemsField;
        
        private System.Guid rowguidField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ColorField, value) != true))
                {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                if ((this.IsActiveField.Equals(value) != true))
                {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ListPrice
        {
            get
            {
                return this.ListPriceField;
            }
            set
            {
                if ((this.ListPriceField.Equals(value) != true))
                {
                    this.ListPriceField = value;
                    this.RaisePropertyChanged("ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.ModifiedDateField;
            }
            set
            {
                if ((this.ModifiedDateField.Equals(value) != true))
                {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory ProductCategory
        {
            get
            {
                return this.ProductCategoryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductCategoryField, value) != true))
                {
                    this.ProductCategoryField = value;
                    this.RaisePropertyChanged("ProductCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductCategoryID
        {
            get
            {
                return this.ProductCategoryIDField;
            }
            set
            {
                if ((this.ProductCategoryIDField.Equals(value) != true))
                {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription
        {
            get
            {
                return this.ProductDescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true))
                {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID
        {
            get
            {
                return this.ProductIDField;
            }
            set
            {
                if ((this.ProductIDField.Equals(value) != true))
                {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber
        {
            get
            {
                return this.ProductNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true))
                {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                if ((this.QuantityField.Equals(value) != true))
                {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrderItem> SalesOrderItems
        {
            get
            {
                return this.SalesOrderItemsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SalesOrderItemsField, value) != true))
                {
                    this.SalesOrderItemsField = value;
                    this.RaisePropertyChanged("SalesOrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid rowguid
        {
            get
            {
                return this.rowguidField;
            }
            set
            {
                if ((this.rowguidField.Equals(value) != true))
                {
                    this.rowguidField = value;
                    this.RaisePropertyChanged("rowguid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCategory", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldEntityModel")]
    public partial class ProductCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsActiveField;
        
        private System.DateTime ModifiedDateField;
        
        private string NameField;
        
        private int ProductCategoryIDField;
        
        private int ProductCountField;
        
        private System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.Product> ProductsField;
        
        private System.Guid rowguidField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                if ((this.IsActiveField.Equals(value) != true))
                {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.ModifiedDateField;
            }
            set
            {
                if ((this.ModifiedDateField.Equals(value) != true))
                {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCategoryID
        {
            get
            {
                return this.ProductCategoryIDField;
            }
            set
            {
                if ((this.ProductCategoryIDField.Equals(value) != true))
                {
                    this.ProductCategoryIDField = value;
                    this.RaisePropertyChanged("ProductCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCount
        {
            get
            {
                return this.ProductCountField;
            }
            set
            {
                if ((this.ProductCountField.Equals(value) != true))
                {
                    this.ProductCountField = value;
                    this.RaisePropertyChanged("ProductCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.Product> Products
        {
            get
            {
                return this.ProductsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductsField, value) != true))
                {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid rowguid
        {
            get
            {
                return this.rowguidField;
            }
            set
            {
                if ((this.rowguidField.Equals(value) != true))
                {
                    this.rowguidField = value;
                    this.RaisePropertyChanged("rowguid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesOrderItem", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldEntityModel")]
    public partial class SalesOrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal ActualCostField;
        
        private System.DateTime ModifiedDateField;
        
        private int OrderByField;
        
        private BicycleWorldServiceModelClient.BicycleWorldService.Product ProductField;
        
        private int ProductIDField;
        
        private int QuantityField;
        
        private BicycleWorldServiceModelClient.BicycleWorldService.SalesOrder SalesOrderField;
        
        private int SalesOrderIDField;
        
        private int SalesOrderItemIDField;
        
        private int SalesOrderSalesOrderIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ActualCost
        {
            get
            {
                return this.ActualCostField;
            }
            set
            {
                if ((this.ActualCostField.Equals(value) != true))
                {
                    this.ActualCostField = value;
                    this.RaisePropertyChanged("ActualCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this.ModifiedDateField;
            }
            set
            {
                if ((this.ModifiedDateField.Equals(value) != true))
                {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderBy
        {
            get
            {
                return this.OrderByField;
            }
            set
            {
                if ((this.OrderByField.Equals(value) != true))
                {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BicycleWorldServiceModelClient.BicycleWorldService.Product Product
        {
            get
            {
                return this.ProductField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductField, value) != true))
                {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID
        {
            get
            {
                return this.ProductIDField;
            }
            set
            {
                if ((this.ProductIDField.Equals(value) != true))
                {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                if ((this.QuantityField.Equals(value) != true))
                {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BicycleWorldServiceModelClient.BicycleWorldService.SalesOrder SalesOrder
        {
            get
            {
                return this.SalesOrderField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SalesOrderField, value) != true))
                {
                    this.SalesOrderField = value;
                    this.RaisePropertyChanged("SalesOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderID
        {
            get
            {
                return this.SalesOrderIDField;
            }
            set
            {
                if ((this.SalesOrderIDField.Equals(value) != true))
                {
                    this.SalesOrderIDField = value;
                    this.RaisePropertyChanged("SalesOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderItemID
        {
            get
            {
                return this.SalesOrderItemIDField;
            }
            set
            {
                if ((this.SalesOrderItemIDField.Equals(value) != true))
                {
                    this.SalesOrderItemIDField = value;
                    this.RaisePropertyChanged("SalesOrderItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderSalesOrderID
        {
            get
            {
                return this.SalesOrderSalesOrderIDField;
            }
            set
            {
                if ((this.SalesOrderSalesOrderIDField.Equals(value) != true))
                {
                    this.SalesOrderSalesOrderIDField = value;
                    this.RaisePropertyChanged("SalesOrderSalesOrderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesOrder", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldEntityModel")]
    public partial class SalesOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private BicycleWorldServiceModelClient.BicycleWorldService.Customer CustomerField;
        
        private int CustomerIDField;
        
        private System.DateTime OrderDateField;
        
        private int SalesOrderIDField;
        
        private System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrderItem> SalesOrderItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BicycleWorldServiceModelClient.BicycleWorldService.Customer Customer
        {
            get
            {
                return this.CustomerField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CustomerField, value) != true))
                {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID
        {
            get
            {
                return this.CustomerIDField;
            }
            set
            {
                if ((this.CustomerIDField.Equals(value) != true))
                {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate
        {
            get
            {
                return this.OrderDateField;
            }
            set
            {
                if ((this.OrderDateField.Equals(value) != true))
                {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderID
        {
            get
            {
                return this.SalesOrderIDField;
            }
            set
            {
                if ((this.SalesOrderIDField.Equals(value) != true))
                {
                    this.SalesOrderIDField = value;
                    this.RaisePropertyChanged("SalesOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrderItem> SalesOrderItems
        {
            get
            {
                return this.SalesOrderItemsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SalesOrderItemsField, value) != true))
                {
                    this.SalesOrderItemsField = value;
                    this.RaisePropertyChanged("SalesOrderItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldEntityModel")]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CustomerIDField;
        
        private string FirstNameField;
        
        private bool IsAdminField;
        
        private string LastNameField;
        
        private string PasswordHashField;
        
        private string PasswordSaltField;
        
        private string UsernameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID
        {
            get
            {
                return this.CustomerIDField;
            }
            set
            {
                if ((this.CustomerIDField.Equals(value) != true))
                {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true))
                {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin
        {
            get
            {
                return this.IsAdminField;
            }
            set
            {
                if ((this.IsAdminField.Equals(value) != true))
                {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LastNameField, value) != true))
                {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash
        {
            get
            {
                return this.PasswordHashField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true))
                {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt
        {
            get
            {
                return this.PasswordSaltField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true))
                {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UsernameField, value) != true))
                {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductData", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
    public partial class ProductData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CategoryIDField;
        
        private string CategoryNameField;
        
        private string ColorField;
        
        private bool IsActiveField;
        
        private bool IsCategoryActiveField;
        
        private decimal ListPriceField;
        
        private string NameField;
        
        private string ProductDescriptionField;
        
        private int ProductIDField;
        
        private string ProductNumberField;
        
        private int QuantityField;
        
        private int SalesOrderCountField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                if ((this.CategoryIDField.Equals(value) != true))
                {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true))
                {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ColorField, value) != true))
                {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                if ((this.IsActiveField.Equals(value) != true))
                {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategoryActive
        {
            get
            {
                return this.IsCategoryActiveField;
            }
            set
            {
                if ((this.IsCategoryActiveField.Equals(value) != true))
                {
                    this.IsCategoryActiveField = value;
                    this.RaisePropertyChanged("IsCategoryActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ListPrice
        {
            get
            {
                return this.ListPriceField;
            }
            set
            {
                if ((this.ListPriceField.Equals(value) != true))
                {
                    this.ListPriceField = value;
                    this.RaisePropertyChanged("ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription
        {
            get
            {
                return this.ProductDescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true))
                {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID
        {
            get
            {
                return this.ProductIDField;
            }
            set
            {
                if ((this.ProductIDField.Equals(value) != true))
                {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber
        {
            get
            {
                return this.ProductNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true))
                {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                if ((this.QuantityField.Equals(value) != true))
                {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderCount
        {
            get
            {
                return this.SalesOrderCountField;
            }
            set
            {
                if ((this.SalesOrderCountField.Equals(value) != true))
                {
                    this.SalesOrderCountField = value;
                    this.RaisePropertyChanged("SalesOrderCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
    public partial class SystemFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string SystemMessageField;
        
        private string SystemOperationField;
        
        private string SystemReasonField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemMessage
        {
            get
            {
                return this.SystemMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SystemMessageField, value) != true))
                {
                    this.SystemMessageField = value;
                    this.RaisePropertyChanged("SystemMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemOperation
        {
            get
            {
                return this.SystemOperationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SystemOperationField, value) != true))
                {
                    this.SystemOperationField = value;
                    this.RaisePropertyChanged("SystemOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemReason
        {
            get
            {
                return this.SystemReasonField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SystemReasonField, value) != true))
                {
                    this.SystemReasonField = value;
                    this.RaisePropertyChanged("SystemReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
    public partial class DatabaseFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DbMessageField;
        
        private string DbOperationField;
        
        private string DbReasonField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbMessage
        {
            get
            {
                return this.DbMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DbMessageField, value) != true))
                {
                    this.DbMessageField = value;
                    this.RaisePropertyChanged("DbMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbOperation
        {
            get
            {
                return this.DbOperationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DbOperationField, value) != true))
                {
                    this.DbOperationField = value;
                    this.RaisePropertyChanged("DbOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbReason
        {
            get
            {
                return this.DbReasonField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DbReasonField, value) != true))
                {
                    this.DbReasonField = value;
                    this.RaisePropertyChanged("DbReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingCartItem", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
    public partial class ShoppingCartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal CostField;
        
        private int OrderByField;
        
        private int ProductIDField;
        
        private string ProductNameField;
        
        private string ProductNumberField;
        
        private int QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                if ((this.CostField.Equals(value) != true))
                {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderBy
        {
            get
            {
                return this.OrderByField;
            }
            set
            {
                if ((this.OrderByField.Equals(value) != true))
                {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID
        {
            get
            {
                return this.ProductIDField;
            }
            set
            {
                if ((this.ProductIDField.Equals(value) != true))
                {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName
        {
            get
            {
                return this.ProductNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true))
                {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber
        {
            get
            {
                return this.ProductNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true))
                {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                if ((this.QuantityField.Equals(value) != true))
                {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesHistoryData", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
    public partial class SalesHistoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal ItemSubTotalField;
        
        private System.DateTime OrderDateField;
        
        private decimal OrderTotalField;
        
        private decimal PerItemCostField;
        
        private string ProductNameField;
        
        private string ProductNumberField;
        
        private int QuantityField;
        
        private int SalesOrderNumberField;
        
        private int SortOrderField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemSubTotal
        {
            get
            {
                return this.ItemSubTotalField;
            }
            set
            {
                if ((this.ItemSubTotalField.Equals(value) != true))
                {
                    this.ItemSubTotalField = value;
                    this.RaisePropertyChanged("ItemSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate
        {
            get
            {
                return this.OrderDateField;
            }
            set
            {
                if ((this.OrderDateField.Equals(value) != true))
                {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderTotal
        {
            get
            {
                return this.OrderTotalField;
            }
            set
            {
                if ((this.OrderTotalField.Equals(value) != true))
                {
                    this.OrderTotalField = value;
                    this.RaisePropertyChanged("OrderTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PerItemCost
        {
            get
            {
                return this.PerItemCostField;
            }
            set
            {
                if ((this.PerItemCostField.Equals(value) != true))
                {
                    this.PerItemCostField = value;
                    this.RaisePropertyChanged("PerItemCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName
        {
            get
            {
                return this.ProductNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true))
                {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber
        {
            get
            {
                return this.ProductNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true))
                {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                if ((this.QuantityField.Equals(value) != true))
                {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrderNumber
        {
            get
            {
                return this.SalesOrderNumberField;
            }
            set
            {
                if ((this.SalesOrderNumberField.Equals(value) != true))
                {
                    this.SalesOrderNumberField = value;
                    this.RaisePropertyChanged("SalesOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return this.SortOrderField;
            }
            set
            {
                if ((this.SortOrderField.Equals(value) != true))
                {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://BicycleWorld.ca/2013/03/12", ConfigurationName="BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldService")]
    public interface BicycleWorldService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetProduct", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetProductSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetProductDatabaseFaultFaul" +
            "t", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        BicycleWorldServiceModelClient.BicycleWorldService.Product GetProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/ProductList", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/ProductListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/ProductListSystemFaultFault" +
            "", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/ProductListDatabaseFaultFau" +
            "lt", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ProductData> ProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddProduct", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddProductSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddProductDatabaseFaultFaul" +
            "t", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        int AddProduct(BicycleWorldServiceModelClient.BicycleWorldService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveProduct", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveProductSystemFaultFau" +
            "lt", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveProductDatabaseFaultF" +
            "ault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool RemoveProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateProduct", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateProductDatabaseFaultF" +
            "ault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateProductSystemFaultFau" +
            "lt", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        BicycleWorldServiceModelClient.BicycleWorldService.Product UpdateProduct(BicycleWorldServiceModelClient.BicycleWorldService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/CategoriesList", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/CategoriesListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/CategoriesListDatabaseFault" +
            "Fault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/CategoriesListSystemFaultFa" +
            "ult", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory> CategoriesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetCategory", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetCategoryDatabaseFaultFau" +
            "lt", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/GetCategorySystemFaultFault" +
            "", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory GetCategory(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddCategory", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddCategoryDatabaseFaultFau" +
            "lt", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/AddCategorySystemFaultFault" +
            "", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        int AddCategory(BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveCategory", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveCategorySystemFaultFa" +
            "ult", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/RemoveCategoryDatabaseFault" +
            "Fault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool RemoveCategory(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateCategory", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateCategoryDatabaseFault" +
            "Fault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/UpdateCategorySystemFaultFa" +
            "ult", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory UpdateCategory(BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/Test", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/TestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/TestDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/TestSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/Login", ReplyAction="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/LoginDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorld.ca/2013/03/12/BicycleWorldService/LoginSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        void Login();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BicycleWorldServiceChannel : BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BicycleWorldServiceClient : System.ServiceModel.ClientBase<BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldService>, BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldService
    {
        
        public BicycleWorldServiceClient()
        {
        }
        
        public BicycleWorldServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public BicycleWorldServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BicycleWorldServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BicycleWorldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public BicycleWorldServiceModelClient.BicycleWorldService.Product GetProduct(int productID)
        {
            return base.Channel.GetProduct(productID);
        }
        
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ProductData> ProductList()
        {
            return base.Channel.ProductList();
        }
        
        public int AddProduct(BicycleWorldServiceModelClient.BicycleWorldService.Product product)
        {
            return base.Channel.AddProduct(product);
        }
        
        public bool RemoveProduct(int productID)
        {
            return base.Channel.RemoveProduct(productID);
        }
        
        public BicycleWorldServiceModelClient.BicycleWorldService.Product UpdateProduct(BicycleWorldServiceModelClient.BicycleWorldService.Product product)
        {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory> CategoriesList()
        {
            return base.Channel.CategoriesList();
        }
        
        public BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory GetCategory(int categoryID)
        {
            return base.Channel.GetCategory(categoryID);
        }
        
        public int AddCategory(BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory category)
        {
            return base.Channel.AddCategory(category);
        }
        
        public bool RemoveCategory(int categoryID)
        {
            return base.Channel.RemoveCategory(categoryID);
        }
        
        public BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory UpdateCategory(BicycleWorldServiceModelClient.BicycleWorldService.ProductCategory category)
        {
            return base.Channel.UpdateCategory(category);
        }
        
        public string Test()
        {
            return base.Channel.Test();
        }
        
        public void Login()
        {
            base.Channel.Login();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://BicycleWorldSales.ca/2013/03/13", ConfigurationName="BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldSalesService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface BicycleWorldSalesService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/Test", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/TestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/TestSystemFaultFa" +
            "ult", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/TestDatabaseFault" +
            "Fault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/Login", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/LoginSystemFaultF" +
            "ault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/LoginDatabaseFaul" +
            "tFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/IsUserAdmin", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/IsUserAdminRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/IsUserAdminSystem" +
            "FaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/IsUserAdminDataba" +
            "seFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool IsUserAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/AddItemToCart", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/AddItemToCartResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/AddItemToCartSyst" +
            "emFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/AddItemToCartData" +
            "baseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool AddItemToCart(string productNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/RemoveItemFromCar" +
            "t", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/RemoveItemFromCar" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/RemoveItemFromCar" +
            "tDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/RemoveItemFromCar" +
            "tSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool RemoveItemFromCart(string productNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCart", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartSy" +
            "stemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartDa" +
            "tabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        string GetShoppingCart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartLi" +
            "st", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartLi" +
            "stResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartLi" +
            "stDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetShoppingCartLi" +
            "stSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ShoppingCartItem> GetShoppingCartList();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/Checkout", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/CheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/CheckoutSystemFau" +
            "ltFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/CheckoutDatabaseF" +
            "aultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        bool Checkout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "Count", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "CountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "CountDatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "CountSystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        int GetSalesOrderListCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "DatabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesOrderList" +
            "SystemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrder> GetSalesOrderList(int take, int skip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesHistory", ReplyAction="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesHistoryRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.DatabaseFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesHistoryDa" +
            "tabaseFaultFault", Name="DatabaseFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(BicycleWorldServiceModelClient.BicycleWorldService.SystemFault), Action="http://BicycleWorldSales.ca/2013/03/13/BicycleWorldSalesService/GetSalesHistorySy" +
            "stemFaultFault", Name="SystemFault", Namespace="http://schemas.datacontract.org/2004/07/BicycleWorldObjectModel")]
        System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesHistoryData> GetSalesHistory(int take, int skip);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BicycleWorldSalesServiceChannel : BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldSalesService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BicycleWorldSalesServiceClient : System.ServiceModel.ClientBase<BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldSalesService>, BicycleWorldServiceModelClient.BicycleWorldService.BicycleWorldSalesService
    {
        
        public BicycleWorldSalesServiceClient()
        {
        }
        
        public BicycleWorldSalesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public BicycleWorldSalesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BicycleWorldSalesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BicycleWorldSalesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string Test()
        {
            return base.Channel.Test();
        }
        
        public void Login()
        {
            base.Channel.Login();
        }
        
        public bool IsUserAdmin()
        {
            return base.Channel.IsUserAdmin();
        }
        
        public bool AddItemToCart(string productNumber)
        {
            return base.Channel.AddItemToCart(productNumber);
        }
        
        public bool RemoveItemFromCart(string productNumber)
        {
            return base.Channel.RemoveItemFromCart(productNumber);
        }
        
        public string GetShoppingCart()
        {
            return base.Channel.GetShoppingCart();
        }
        
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.ShoppingCartItem> GetShoppingCartList()
        {
            return base.Channel.GetShoppingCartList();
        }
        
        public bool Checkout()
        {
            return base.Channel.Checkout();
        }
        
        public int GetSalesOrderListCount()
        {
            return base.Channel.GetSalesOrderListCount();
        }
        
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesOrder> GetSalesOrderList(int take, int skip)
        {
            return base.Channel.GetSalesOrderList(take, skip);
        }
        
        public System.Collections.Generic.List<BicycleWorldServiceModelClient.BicycleWorldService.SalesHistoryData> GetSalesHistory(int take, int skip)
        {
            return base.Channel.GetSalesHistory(take, skip);
        }
    }
}
